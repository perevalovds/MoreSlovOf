#include "gui_generated.h"
//Auto-generated GUI file for ofxKuTextGui, 2021-08-17-07-01-51-689

Parameters params;
//--------------------------------------------------------------
Parameters::Parameters() {
	ClearLog=0;
	Save=0;
	Exit=0;
	fps_=0;
	vol_in_=0;
	vol_out_=0;
	_FPS_=70;
	_FULL_SCR_=2;
	update_scr=0;
	_scr_x_=20;
	_scr_y_=20;
	_scr_w_=1000;
	_scr_h_=800;
	_messages_n_=25;
	_messages_font_=25;
	_messages_x_=20;
	_messages_y_=320;
	_OSC_in_port_=12400;
	_in_channels_=2;
	_out_channels_=2;
	_sample_rate_=4;
	_sound_buffers_=4;
	_sound_buffer_=512;
	_engine_=2;
	_selectby_=0;
	_device_in_=0;
	_device_out_=0;
	_devin_nameports_="...:...:..";
	_devout_nameports_="...:...:..";
	_EMULATE_IN_=0;
	emulate_vol=1;
	device_in_name_="";
	device_out_name_="";
	SOUND_STATUS_=0;
	SND_CALLB_="NO";
	ShowDevices=0;
	MIC_VOL=1;
	MIC_FILTER=0;
	mic_cutoff=0.1;
	PASS_THRU=0;
	pass_vol=1;
	OUT_VOL=1;
	SaveDebugSounds=0;
}

//--------------------------------------------------------------
void Parameters::setup(ofxKuTextGui &gui, string fileName) {
	gui.addPage("Settings");
	gui.addButton("ClearLog",ClearLog);
	gui.addButton("Save",Save);
	gui.addButton("Exit",Exit);
	gui.addDummy("");
	gui.addInt("-fps",fps_,0,0,200,1,20);
	gui.addFloat("-vol_in",vol_in_,0,0,1,100,10);
	gui.addFloat("-vol_out",vol_out_,0,0,1,100,10);
	gui.addTab();
	gui.addDummy("Screen:");
	gui.addInt("*FPS",_FPS_,70,5,200,1,20);
	gui.addStringList("*FULL_SCR",_FULL_SCR_,2,3,"OFF","BORDERLESS","ON");
	gui.addDummy("Press to update screen:");
	gui.addButton("update_scr",update_scr);
	gui.addTab();
	gui.addDummy("Borderless screen:");
	gui.addInt("*scr_x",_scr_x_,20,-20000,20000,1,20);
	gui.addInt("*scr_y",_scr_y_,20,-20000,20000,1,20);
	gui.addInt("*scr_w",_scr_w_,1000,100,10000,1,20);
	gui.addInt("*scr_h",_scr_h_,800,100,10000,1,20);
	gui.addTab();
	gui.addDummy("Message log:");
	gui.addInt("*messages_n",_messages_n_,25,1,1000,1,10);
	gui.addInt("*messages_font",_messages_font_,25,0,1000,1,10);
	gui.addInt("*messages_x",_messages_x_,20,0,10000,1,20);
	gui.addInt("*messages_y",_messages_y_,320,0,10000,1,20);
	gui.addPage("Network");
	gui.addVar("ClearLog");
	gui.addVar("Save");
	gui.addVar("Exit");
	gui.addDummy("");
	gui.addVar("-fps");
	gui.addVar("-vol_in");
	gui.addVar("-vol_out");
	gui.addTab();
	gui.addDummy("OSC port for Config:");
	gui.addInt("*OSC_in_port",_OSC_in_port_,12400,1,65535,1,20);
	gui.addPage("SoundSetup");
	gui.addVar("ClearLog");
	gui.addVar("Save");
	gui.addVar("Exit");
	gui.addDummy("");
	gui.addVar("-fps");
	gui.addVar("-vol_in");
	gui.addVar("-vol_out");
	gui.addTab();
	gui.addDummy("Channels setup:");
	gui.addInt("*in_channels",_in_channels_,2,1,8,1,10);
	gui.addInt("*out_channels",_out_channels_,2,1,8,1,10);
	gui.addDummy("Sound setup:");
	gui.addStringList("*sample_rate",_sample_rate_,4,6,"8000","11025","22050","32000","44100","48000");
	gui.addInt("*sound_buffers",_sound_buffers_,4,1,16,1,10);
	gui.addInt("*sound_buffer",_sound_buffer_,512,8,4096,1,50);
	gui.addTab();
	gui.addDummy("Select devices:");
	gui.addStringList("*engine",_engine_,2,3,"WASAPI","ASIO","DS");
	gui.addStringList("*selectby",_selectby_,0,2,"ID","NAME");
	gui.addInt("*device_in",_device_in_,0,-1,20,1,10);
	gui.addInt("*device_out",_device_out_,0,-1,20,1,10);
	gui.addDummy("namepart:portsin:out");
	gui.addString("*devin_nameports",_devin_nameports_,"...:...:..");
	gui.addString("*devout_nameports",_devout_nameports_,"...:...:..");
	gui.addDummy("Mic emulator:");
	gui.addStringList("*EMULATE_IN",_EMULATE_IN_,0,2,"OFF","ON");
	gui.addFloat("emulate_vol",emulate_vol,1,0,10,100,10);
	gui.addTab();
	gui.addDummy("Started devices:");
	gui.addString("-device_in_name",device_in_name_,"");
	gui.addString("-device_out_name",device_out_name_,"");
	gui.addDummy("Status:");
	gui.addStringList("-SOUND_STATUS",SOUND_STATUS_,0,2,"NOT_STARTED","STARTED");
	gui.addString("-SND_CALLB",SND_CALLB_,"NO");
	gui.addDummy("");
	gui.addDummy("");
	gui.addDummy("");
	gui.addButton("ShowDevices",ShowDevices);
	gui.addDummy("");
	gui.addDummy("Mic sound:");
	gui.addDummy("MIC");
	gui.addFloat("MIC_VOL",MIC_VOL,1,0,100,1000,100);
	gui.addStringList("MIC_FILTER",MIC_FILTER,0,4,"BYPASS","LOWPASS","HIGHPASS","BANDPASS");
	gui.addFloat("mic_cutoff",mic_cutoff,0.1,0,1,1000,100);
	gui.addDummy("Pass mic sound:");
	gui.addStringList("PASS_THRU",PASS_THRU,0,2,"OFF","ON");
	gui.addFloat("pass_vol",pass_vol,1,0,1,100,10);
	gui.addDummy("Generated sound:");
	gui.addFloat("OUT_VOL",OUT_VOL,1,0,10,1000,100);
	gui.addPage("Debug");
	gui.addVar("ClearLog");
	gui.addVar("Save");
	gui.addVar("Exit");
	gui.addDummy("");
	gui.addVar("-fps");
	gui.addVar("-vol_in");
	gui.addVar("-vol_out");
	gui.addTab();
	gui.addTab();
	gui.addStringList("SaveDebugSounds",SaveDebugSounds,0,2,"OFF","ON");
	gui.set_var_color("Save", ofColor(255,255,140));
	gui.set_var_color("Exit", ofColor(255,255,140));
	gui.set_var_color("*FPS", ofColor(255,140,255));
	gui.set_var_color("*FULL_SCR", ofColor(255,140,255));
	gui.set_var_color("update_scr", ofColor(255,140,255));
	gui.set_var_color("*scr_x", ofColor(255,140,255));
	gui.set_var_color("*scr_y", ofColor(255,140,255));
	gui.set_var_color("*scr_w", ofColor(255,140,255));
	gui.set_var_color("*scr_h", ofColor(255,140,255));
	gui.set_var_color("*in_channels", ofColor(255,140,140));
	gui.set_var_color("*out_channels", ofColor(255,140,140));
	gui.set_var_color("*sample_rate", ofColor(255,140,140));
	gui.set_var_color("*sound_buffers", ofColor(255,140,140));
	gui.set_var_color("*sound_buffer", ofColor(255,140,140));
	gui.set_var_color("*engine", ofColor(255,140,140));
	gui.set_var_color("*selectby", ofColor(255,140,140));
	gui.set_var_color("*device_in", ofColor(255,140,140));
	gui.set_var_color("*device_out", ofColor(255,140,140));
	gui.set_var_color("*devin_nameports", ofColor(255,140,140));
	gui.set_var_color("*devout_nameports", ofColor(255,140,140));
	gui.set_var_color("*EMULATE_IN", ofColor(255,255,0));
	gui.set_var_color("emulate_vol", ofColor(255,255,0));
	gui.set_var_color("-SOUND_STATUS", ofColor(255,255,0));
	gui.set_var_color("-SND_CALLB", ofColor(255,255,0));
	gui.set_var_color("ShowDevices", ofColor(255,255,0));
	gui.set_var_color("MIC_VOL", ofColor(100,255,100));
	gui.set_var_color("MIC_FILTER", ofColor(100,255,100));
	gui.set_var_color("mic_cutoff", ofColor(100,255,100));
	gui.set_var_color("PASS_THRU", ofColor(80,255,80));
	gui.set_var_color("pass_vol", ofColor(80,255,80));
	gui.set_var_color("OUT_VOL", ofColor(255,100,100));
	gui.set_var_color("SaveDebugSounds", ofColor(80,80,255));
	fileName_ = fileName;
	gui_ = &gui;
	gui.loadFromFile(fileName);
	FPS = _FPS_;
	FULL_SCR = _FULL_SCR_;
	scr_x = _scr_x_;
	scr_y = _scr_y_;
	scr_w = _scr_w_;
	scr_h = _scr_h_;
	messages_n = _messages_n_;
	messages_font = _messages_font_;
	messages_x = _messages_x_;
	messages_y = _messages_y_;
	OSC_in_port = _OSC_in_port_;
	in_channels = _in_channels_;
	out_channels = _out_channels_;
	sample_rate = _sample_rate_;
	sound_buffers = _sound_buffers_;
	sound_buffer = _sound_buffer_;
	engine = _engine_;
	selectby = _selectby_;
	device_in = _device_in_;
	device_out = _device_out_;
	devin_nameports = _devin_nameports_;
	devout_nameports = _devout_nameports_;
	EMULATE_IN = _EMULATE_IN_;
}

//--------------------------------------------------------------
void Parameters::save() {
	gui_->saveToFile(fileName_);
}

//--------------------------------------------------------------

