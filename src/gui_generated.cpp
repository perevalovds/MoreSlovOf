#include "gui_generated.h"
//Auto-generated GUI file for ofxKuTextGui, 2021-07-07-10-43-24-872

Parameters params;
//--------------------------------------------------------------
Parameters::Parameters() {
	ClearLog=0;
	Save=0;
	Exit=0;
	fps_=0;
	vol_in_=0;
	vol_out_=0;
	_FPS_=70;
	_FULL_SCR_=2;
	update_scr=0;
	_scr_x_=20;
	_scr_y_=20;
	_scr_w_=1000;
	_scr_h_=800;
	_messages_n_=25;
	_messages_font_=25;
	_messages_x_=20;
	_messages_y_=320;
	_OSC_in_port_=12400;
	Watchdog=1;
	wd_port=12370;
	wd_time=2;
	_in_channels_=2;
	_out_channels_=2;
	_sample_rate_=4;
	_sound_buffers_=4;
	_sound_buffer_=5;
	_engine_=2;
	_selectby_=0;
	_device_in_=0;
	_device_out_=0;
	_devin_nameports_="...:...:..";
	_devout_nameports_="...:...:..";
	_EMULATE_IN_=0;
	emulate_vol=1;
	device_in_name_="";
	device_out_name_="";
	SOUND_STATUS_=0;
	SND_CALLB_="NO";
	ShowDevices=0;
	_buffer_sec_=30;
	_safe_samples_=512;
	heads_dist_=0;
	PASS_THRU=0;
	pass_vol=1;
	MIC_VOL=1;
	GEN_VOL=1;
	SaveNetwork=0;
	LoadNetwork=0;
	_time_in_=2;
	_sparse_incr_=1.5;
	input_neurons_=1;
	_hidden_neurons_=16;
	examples=3000;
	train_steps=5;
	epochs=10;
	momentum=0.5;
	wghpred_1=1;
	wghpred_2=2;
	wghpred_3=3;
	predict_sec1=1;
	predict_sec2=1;
	predict_sec3=1;
	predict_sec_=1;
	Test_Constr_gen=0;
	wghstep_1=1;
	wghstep_2=1;
	wghstep_3=5;
	examplstep1=4;
	examplstep2=10;
	examplstep3=40;
	examplstep_=1;
	examplsec_="";
	MICROPHONES=2;
	mic_=1;
	des_amount_=0;
	des_range_=0;
	TrainNow=0;
	GenParams=0;
	GenSound=0;
	GenSequence=0;
	RMS_=0;
	RMS_MAX=0.01;
	FILTER=0;
	filter_cutoff=0.1;
	INFILTER=0;
	infilter_cutoff=0.1;
	AUTOPLAY=1;
	starting_pause=5;
	mode_=0;
	pause_="";
	train_train=0;
	train_play=80;
	train_pause=20;
	play_train=10;
	play_play=50;
	play_pause=10;
	pause_train=20;
	pause_play=50;
	pause_pause=0;
	pause_sec1=3;
	pause_sec2=3;
	pause_sec3=3;
	pause_sec4=3;
	pause_sec5=3;
	Test_NextStep=0;
	SEQ_NOTES=3;
	SEQ_OVERLAP=0.1;
	fade_sec=0.2;
	des_amount_0=1;
	des_amount_10=0;
	des_amount_20=0;
	des_amount_30=0;
	des_amount_40=0;
	des_amount_50=0;
	des_amount_60=0;
	des_amount_70=0;
	des_amount_80=0;
	des_amount_90=0;
	des_amt_divide="1";
	Test_Destr_gen=0;
	des_range_0=1;
	des_range_10=0;
	des_range_20=0;
	des_range_30=0;
	des_range_40=0;
	des_range_50=0;
	des_range_60=0;
	des_range_70=0;
	des_range_80=0;
	des_range_90=0;
	des_range_100=0;
	des_rng_divide="1";
	SaveDebugSounds=0;
}

//--------------------------------------------------------------
void Parameters::setup(ofxKuTextGui &gui, string fileName) {
	gui.addPage("Settings");
	gui.addButton("ClearLog",ClearLog);
	gui.addButton("Save",Save);
	gui.addButton("Exit",Exit);
	gui.addDummy("");
	gui.addInt("-fps",fps_,0,0,200,1,20);
	gui.addFloat("-vol_in",vol_in_,0,0,1,100,10);
	gui.addFloat("-vol_out",vol_out_,0,0,1,100,10);
	gui.addTab();
	gui.addDummy("Screen:");
	gui.addInt("*FPS",_FPS_,70,5,200,1,20);
	gui.addStringList("*FULL_SCR",_FULL_SCR_,2,3,"OFF","BORDERLESS","ON");
	gui.addDummy("Press to update screen:");
	gui.addButton("update_scr",update_scr);
	gui.addTab();
	gui.addDummy("Borderless screen:");
	gui.addInt("*scr_x",_scr_x_,20,-20000,20000,1,20);
	gui.addInt("*scr_y",_scr_y_,20,-20000,20000,1,20);
	gui.addInt("*scr_w",_scr_w_,1000,100,10000,1,20);
	gui.addInt("*scr_h",_scr_h_,800,100,10000,1,20);
	gui.addTab();
	gui.addDummy("Message log:");
	gui.addInt("*messages_n",_messages_n_,25,1,1000,1,10);
	gui.addInt("*messages_font",_messages_font_,25,0,1000,1,10);
	gui.addInt("*messages_x",_messages_x_,20,0,10000,1,20);
	gui.addInt("*messages_y",_messages_y_,320,0,10000,1,20);
	gui.addPage("Network");
	gui.addVar("ClearLog");
	gui.addVar("Save");
	gui.addVar("Exit");
	gui.addDummy("");
	gui.addVar("-fps");
	gui.addVar("-vol_in");
	gui.addVar("-vol_out");
	gui.addTab();
	gui.addDummy("OSC port for Config:");
	gui.addInt("*OSC_in_port",_OSC_in_port_,12400,1,65535,1,20);
	gui.addTab();
	gui.addTab();
	gui.addDummy("Watchdog send settings:");
	gui.addStringList("Watchdog",Watchdog,1,2,"OFF","ON");
	gui.addDummy("OSC port");
	gui.addInt("wd_port",wd_port,12370,1,65535,1,20);
	gui.addDummy("sending period");
	gui.addInt("wd_time",wd_time,2,1,120,1,10);
	gui.addPage("SoundSetup");
	gui.addVar("ClearLog");
	gui.addVar("Save");
	gui.addVar("Exit");
	gui.addDummy("");
	gui.addVar("-fps");
	gui.addVar("-vol_in");
	gui.addVar("-vol_out");
	gui.addTab();
	gui.addDummy("Channels setup:");
	gui.addInt("*in_channels",_in_channels_,2,1,8,1,10);
	gui.addInt("*out_channels",_out_channels_,2,1,8,1,10);
	gui.addDummy("Sound setup:");
	gui.addStringList("*sample_rate",_sample_rate_,4,6,"8000","11025","22050","32000","44100","48000");
	gui.addInt("*sound_buffers",_sound_buffers_,4,1,16,1,10);
	gui.addStringList("*sound_buffer",_sound_buffer_,5,9,"16","32","64","128","256","512","1024","2048","4096");
	gui.addTab();
	gui.addDummy("Select devices:");
	gui.addStringList("*engine",_engine_,2,3,"WASAPI","ASIO","DS");
	gui.addStringList("*selectby",_selectby_,0,2,"ID","NAME");
	gui.addInt("*device_in",_device_in_,0,-1,20,1,10);
	gui.addInt("*device_out",_device_out_,0,-1,20,1,10);
	gui.addDummy("namepart:portsin:out");
	gui.addString("*devin_nameports",_devin_nameports_,"...:...:..");
	gui.addString("*devout_nameports",_devout_nameports_,"...:...:..");
	gui.addDummy("Mic emulator:");
	gui.addStringList("*EMULATE_IN",_EMULATE_IN_,0,2,"OFF","ON");
	gui.addFloat("emulate_vol",emulate_vol,1,0,10,100,10);
	gui.addTab();
	gui.addDummy("Started devices:");
	gui.addString("-device_in_name",device_in_name_,"");
	gui.addString("-device_out_name",device_out_name_,"");
	gui.addDummy("Status:");
	gui.addStringList("-SOUND_STATUS",SOUND_STATUS_,0,2,"NOT_STARTED","STARTED");
	gui.addString("-SND_CALLB",SND_CALLB_,"NO");
	gui.addDummy("");
	gui.addDummy("");
	gui.addDummy("");
	gui.addButton("ShowDevices",ShowDevices);
	gui.addPage("DemonSound");
	gui.addVar("ClearLog");
	gui.addVar("Save");
	gui.addVar("Exit");
	gui.addDummy("");
	gui.addVar("-fps");
	gui.addVar("-vol_in");
	gui.addVar("-vol_out");
	gui.addTab();
	gui.addInt("*buffer_sec",_buffer_sec_,30,1,300,1,10);
	gui.addInt("*safe_samples",_safe_samples_,512,1,4096,1,20);
	gui.addInt("-heads_dist",heads_dist_,0,0,4096,1,10);
	gui.addDummy("Pass mic sound:");
	gui.addStringList("PASS_THRU",PASS_THRU,0,2,"OFF","ON");
	gui.addFloat("pass_vol",pass_vol,1,0,1,100,10);
	gui.addTab();
	gui.addDummy("INPUT/OUTPUT LEVELS");
	gui.addDummy("Mic sound:");
	gui.addFloat("MIC_VOL",MIC_VOL,1,0,100,1000,100);
	gui.addDummy("Generated sound:");
	gui.addFloat("GEN_VOL",GEN_VOL,1,0,10,1000,100);
	gui.addPage("NetworkStatic");
	gui.addVar("ClearLog");
	gui.addVar("Save");
	gui.addVar("Exit");
	gui.addDummy("");
	gui.addVar("-fps");
	gui.addVar("-vol_in");
	gui.addVar("-vol_out");
	gui.addTab();
	gui.addDummy("Save Shift+S");
	gui.addButton("SaveNetwork",SaveNetwork);
	gui.addButton("LoadNetwork",LoadNetwork);
	gui.addTab();
	gui.addDummy("Input neurons:");
	gui.addInt("*time_in",_time_in_,2,1,10,1,10);
	gui.addFloat("*sparse_incr",_sparse_incr_,1.5,1,10,100,10);
	gui.addInt("-input_neurons",input_neurons_,1,1,10000,1,10);
	gui.addDummy("Hidden neurons:");
	gui.addInt("*hidden_neurons",_hidden_neurons_,16,1,200,1,10);
	gui.addTab();
	gui.addDummy("Training:");
	gui.addInt("examples",examples,3000,1,10000,1,10);
	gui.addInt("train_steps",train_steps,5,1,1000,1,10);
	gui.addInt("epochs",epochs,10,1,1000,100,10);
	gui.addDummy("");
	gui.addFloat("momentum",momentum,0.5,0,1,100,10);
	gui.addPage("NetworkDynamic");
	gui.addVar("ClearLog");
	gui.addVar("Save");
	gui.addVar("Exit");
	gui.addDummy("");
	gui.addVar("-fps");
	gui.addVar("-vol_in");
	gui.addVar("-vol_out");
	gui.addTab();
	gui.addDummy("Pass mic sound:");
	gui.addVar("PASS_THRU");
	gui.addVar("pass_vol");
	gui.addDummy("Generated sound:");
	gui.addVar("gen_vol");
	gui.addTab();
	gui.addDummy("Out duration:");
	gui.addInt("wghpred_1",wghpred_1,1,1,100,1,10);
	gui.addInt("wghpred_2",wghpred_2,2,1,100,1,10);
	gui.addInt("wghpred_3",wghpred_3,3,1,100,1,10);
	gui.addInt("predict_sec1",predict_sec1,1,1,30,1,10);
	gui.addInt("predict_sec2",predict_sec2,1,1,30,1,10);
	gui.addInt("predict_sec3",predict_sec3,1,1,30,1,10);
	gui.addInt("-predict_sec",predict_sec_,1,1,30,1,10);
	gui.addButton("Test_Constr_gen",Test_Constr_gen);
	gui.addTab();
	gui.addDummy("Learn range:");
	gui.addInt("wghstep_1",wghstep_1,1,1,100,1,10);
	gui.addInt("wghstep_2",wghstep_2,1,1,100,1,10);
	gui.addInt("wghstep_3",wghstep_3,5,1,100,1,10);
	gui.addInt("examplstep1",examplstep1,4,1,500,1,10);
	gui.addInt("examplstep2",examplstep2,10,1,500,1,10);
	gui.addInt("examplstep3",examplstep3,40,1,500,1,10);
	gui.addInt("-examplstep",examplstep_,1,1,500,1,10);
	gui.addString("-examplsec",examplsec_,"");
	gui.addTab();
	gui.addInt("MICROPHONES",MICROPHONES,2,1,8,1,10);
	gui.addInt("-mic",mic_,1,1,8,1,10);
	gui.addDummy("Destructor:");
	gui.addFloat("-des_amount",des_amount_,0,0,1,100,10);
	gui.addFloat("-des_range",des_range_,0,0,1,100,10);
	gui.addDummy("");
	gui.addDummy("");
	gui.addDummy("");
	gui.addButton("TrainNow",TrainNow);
	gui.addButton("GenParams",GenParams);
	gui.addButton("GenSound",GenSound);
	gui.addButton("GenSequence",GenSequence);
	gui.addFloat("-RMS",RMS_,0,0,1,100,10);
	gui.addFloat("RMS_MAX",RMS_MAX,0.01,0,1,1000,100);
	gui.addStringList("FILTER",FILTER,0,4,"BYPASS","LOWPASS","HIGHPASS","BANDPASS");
	gui.addFloat("filter_cutoff",filter_cutoff,0.1,0,1,1000,100);
	gui.addStringList("INFILTER",INFILTER,0,4,"BYPASS","LOWPASS","HIGHPASS","BANDPASS");
	gui.addFloat("infilter_cutoff",infilter_cutoff,0.1,0,1,1000,100);
	gui.addPage("Autoplay");
	gui.addVar("ClearLog");
	gui.addVar("Save");
	gui.addVar("Exit");
	gui.addDummy("");
	gui.addVar("-fps");
	gui.addVar("-vol_in");
	gui.addVar("-vol_out");
	gui.addTab();
	gui.addDummy("Pass mic sound:");
	gui.addVar("PASS_THRU");
	gui.addVar("pass_vol");
	gui.addDummy("Generated sound:");
	gui.addVar("gen_vol");
	gui.addTab();
	gui.addDummy("Generator:");
	gui.addVar("-predict_sec");
	gui.addDummy("Mic:");
	gui.addVar("-mic");
	gui.addDummy("Destructor:");
	gui.addVar("-des_amount");
	gui.addVar("-des_range");
	gui.addTab();
	gui.addStringList("AUTOPLAY",AUTOPLAY,1,2,"OFF","ON");
	gui.addInt("starting_pause",starting_pause,5,1,20,1,10);
	gui.addStringList("-mode",mode_,0,3,"TRAIN","PLAY","PAUSE");
	gui.addString("-pause",pause_,"");
	gui.addDummy("Transitions");
	gui.addInt("train_train",train_train,0,0,100,1,10);
	gui.addInt("train_play",train_play,80,0,100,1,10);
	gui.addInt("train_pause",train_pause,20,0,100,1,10);
	gui.addInt("play_train",play_train,10,0,100,1,10);
	gui.addInt("play_play",play_play,50,0,100,1,10);
	gui.addInt("play_pause",play_pause,10,0,100,1,10);
	gui.addInt("pause_train",pause_train,20,0,100,1,10);
	gui.addInt("pause_play",pause_play,50,0,100,1,10);
	gui.addInt("pause_pause",pause_pause,0,0,100,1,10);
	gui.addTab();
	gui.addDummy("Pauses:");
	gui.addInt("pause_sec1",pause_sec1,3,1,30,1,10);
	gui.addInt("pause_sec2",pause_sec2,3,1,30,1,10);
	gui.addInt("pause_sec3",pause_sec3,3,1,30,1,10);
	gui.addInt("pause_sec4",pause_sec4,3,1,30,1,10);
	gui.addInt("pause_sec5",pause_sec5,3,1,30,1,10);
	gui.addButton("Test_NextStep",Test_NextStep);
	gui.addDummy("SEQUENCER");
	gui.addInt("SEQ_NOTES",SEQ_NOTES,3,1,32,1,10);
	gui.addFloat("SEQ_OVERLAP",SEQ_OVERLAP,0.1,0,5,500,50);
	gui.addFloat("fade_sec",fade_sec,0.2,0,10,1000,100);
	gui.addDummy("");
	gui.addVar("TrainNow");
	gui.addVar("GenParams");
	gui.addVar("GenSound");
	gui.addVar("GenSequence");
	gui.addVar("-RMS");
	gui.addVar("RMS_MAX");
	gui.addVar("FILTER");
	gui.addVar("filter_cutoff");
	gui.addPage("Destructor");
	gui.addVar("ClearLog");
	gui.addVar("Save");
	gui.addVar("Exit");
	gui.addDummy("");
	gui.addVar("-fps");
	gui.addVar("-vol_in");
	gui.addVar("-vol_out");
	gui.addTab();
	gui.addTab();
	gui.addDummy("Destructor");
	gui.addInt("des_amount_0",des_amount_0,1,1,100,1,10);
	gui.addInt("des_amount_10",des_amount_10,0,0,100,1,10);
	gui.addInt("des_amount_20",des_amount_20,0,0,100,1,10);
	gui.addInt("des_amount_30",des_amount_30,0,0,100,1,10);
	gui.addInt("des_amount_40",des_amount_40,0,0,100,1,10);
	gui.addInt("des_amount_50",des_amount_50,0,0,100,1,10);
	gui.addInt("des_amount_60",des_amount_60,0,0,100,1,10);
	gui.addInt("des_amount_70",des_amount_70,0,0,100,1,10);
	gui.addInt("des_amount_80",des_amount_80,0,0,100,1,10);
	gui.addInt("des_amount_90",des_amount_90,0,0,100,1,10);
	gui.addString("des_amt_divide",des_amt_divide,"1");
	gui.addVar("-des_amount");
	gui.addButton("Test_Destr_gen",Test_Destr_gen);
	gui.addTab();
	gui.addInt("des_range_0",des_range_0,1,1,100,1,10);
	gui.addInt("des_range_10",des_range_10,0,0,100,1,10);
	gui.addInt("des_range_20",des_range_20,0,0,100,1,10);
	gui.addInt("des_range_30",des_range_30,0,0,100,1,10);
	gui.addInt("des_range_40",des_range_40,0,0,100,1,10);
	gui.addInt("des_range_50",des_range_50,0,0,100,1,10);
	gui.addInt("des_range_60",des_range_60,0,0,100,1,10);
	gui.addInt("des_range_70",des_range_70,0,0,100,1,10);
	gui.addInt("des_range_80",des_range_80,0,0,100,1,10);
	gui.addInt("des_range_90",des_range_90,0,0,100,1,10);
	gui.addInt("des_range_100",des_range_100,0,0,100,1,10);
	gui.addString("des_rng_divide",des_rng_divide,"1");
	gui.addVar("-des_range");
	gui.addTab();
	gui.addDummy("");
	gui.addDummy("");
	gui.addDummy("");
	gui.addDummy("");
	gui.addDummy("");
	gui.addDummy("");
	gui.addDummy("");
	gui.addDummy("");
	gui.addDummy("");
	gui.addDummy("");
	gui.addVar("TrainNow");
	gui.addVar("GenParams");
	gui.addVar("GenSound");
	gui.addVar("GenSequence");
	gui.addVar("-RMS");
	gui.addVar("RMS_MAX");
	gui.addVar("FILTER");
	gui.addVar("filter_cutoff");
	gui.addPage("Debug");
	gui.addVar("ClearLog");
	gui.addVar("Save");
	gui.addVar("Exit");
	gui.addDummy("");
	gui.addVar("-fps");
	gui.addVar("-vol_in");
	gui.addVar("-vol_out");
	gui.addTab();
	gui.addTab();
	gui.addStringList("SaveDebugSounds",SaveDebugSounds,0,2,"OFF","ON");
	gui.set_var_color("Save", ofColor(255,255,140));
	gui.set_var_color("Exit", ofColor(255,255,140));
	gui.set_var_color("*FPS", ofColor(255,140,255));
	gui.set_var_color("*FULL_SCR", ofColor(255,140,255));
	gui.set_var_color("update_scr", ofColor(255,140,255));
	gui.set_var_color("*scr_x", ofColor(255,140,255));
	gui.set_var_color("*scr_y", ofColor(255,140,255));
	gui.set_var_color("*scr_w", ofColor(255,140,255));
	gui.set_var_color("*scr_h", ofColor(255,140,255));
	gui.set_var_color("Watchdog", ofColor(255,140,140));
	gui.set_var_color("wd_port", ofColor(255,140,140));
	gui.set_var_color("wd_time", ofColor(255,140,140));
	gui.set_var_color("*in_channels", ofColor(255,140,140));
	gui.set_var_color("*out_channels", ofColor(255,140,140));
	gui.set_var_color("*sample_rate", ofColor(255,140,140));
	gui.set_var_color("*sound_buffers", ofColor(255,140,140));
	gui.set_var_color("*sound_buffer", ofColor(255,140,140));
	gui.set_var_color("*engine", ofColor(255,140,140));
	gui.set_var_color("*selectby", ofColor(255,140,140));
	gui.set_var_color("*device_in", ofColor(255,140,140));
	gui.set_var_color("*device_out", ofColor(255,140,140));
	gui.set_var_color("*devin_nameports", ofColor(255,140,140));
	gui.set_var_color("*devout_nameports", ofColor(255,140,140));
	gui.set_var_color("*EMULATE_IN", ofColor(255,255,0));
	gui.set_var_color("emulate_vol", ofColor(255,255,0));
	gui.set_var_color("-SOUND_STATUS", ofColor(255,255,0));
	gui.set_var_color("-SND_CALLB", ofColor(255,255,0));
	gui.set_var_color("ShowDevices", ofColor(255,255,0));
	gui.set_var_color("*buffer_sec", ofColor(255,140,140));
	gui.set_var_color("*safe_samples", ofColor(255,140,140));
	gui.set_var_color("-heads_dist", ofColor(200,200,200));
	gui.set_var_color("PASS_THRU", ofColor(80,255,80));
	gui.set_var_color("pass_vol", ofColor(80,255,80));
	gui.set_var_color("MIC_VOL", ofColor(80,255,80));
	gui.set_var_color("GEN_VOL", ofColor(80,255,80));
	gui.set_var_color("SaveNetwork", ofColor(80,255,80));
	gui.set_var_color("LoadNetwork", ofColor(80,255,80));
	gui.set_var_color("*time_in", ofColor(255,140,140));
	gui.set_var_color("*sparse_incr", ofColor(255,140,140));
	gui.set_var_color("*hidden_neurons", ofColor(255,140,140));
	gui.set_var_color("examples", ofColor(255,140,140));
	gui.set_var_color("train_steps", ofColor(255,140,140));
	gui.set_var_color("epochs", ofColor(255,140,140));
	gui.set_var_color("momentum", ofColor(255,140,140));
	gui.set_var_color("wghpred_1", ofColor(140,255,255));
	gui.set_var_color("wghpred_2", ofColor(140,255,255));
	gui.set_var_color("wghpred_3", ofColor(140,255,255));
	gui.set_var_color("predict_sec1", ofColor(140,140,255));
	gui.set_var_color("predict_sec2", ofColor(140,140,255));
	gui.set_var_color("predict_sec3", ofColor(140,140,255));
	gui.set_var_color("-predict_sec", ofColor(80,255,90));
	gui.set_var_color("wghstep_1", ofColor(140,255,255));
	gui.set_var_color("wghstep_2", ofColor(140,255,255));
	gui.set_var_color("wghstep_3", ofColor(140,255,255));
	gui.set_var_color("examplstep1", ofColor(140,140,255));
	gui.set_var_color("examplstep2", ofColor(140,140,255));
	gui.set_var_color("examplstep3", ofColor(140,140,255));
	gui.set_var_color("-examplsec", ofColor(255,140,140));
	gui.set_var_color("MICROPHONES", ofColor(140,140,255));
	gui.set_var_color("-des_amount", ofColor(80,255,90));
	gui.set_var_color("-des_range", ofColor(80,255,90));
	gui.set_var_color("TrainNow", ofColor(80,255,90));
	gui.set_var_color("GenParams", ofColor(80,255,90));
	gui.set_var_color("GenSound", ofColor(80,255,90));
	gui.set_var_color("GenSequence", ofColor(80,255,90));
	gui.set_var_color("-RMS", ofColor(80,180,80));
	gui.set_var_color("RMS_MAX", ofColor(255,255,80));
	gui.set_var_color("FILTER", ofColor(255,255,80));
	gui.set_var_color("filter_cutoff", ofColor(255,255,80));
	gui.set_var_color("INFILTER", ofColor(255,255,80));
	gui.set_var_color("infilter_cutoff", ofColor(255,255,80));
	gui.set_var_color("AUTOPLAY", ofColor(255,255,0));
	gui.set_var_color("starting_pause", ofColor(255,255,0));
	gui.set_var_color("train_train", ofColor(255,255,140));
	gui.set_var_color("train_play", ofColor(255,255,140));
	gui.set_var_color("train_pause", ofColor(255,255,140));
	gui.set_var_color("play_train", ofColor(140,255,255));
	gui.set_var_color("play_play", ofColor(140,255,255));
	gui.set_var_color("play_pause", ofColor(140,255,255));
	gui.set_var_color("pause_train", ofColor(255,140,255));
	gui.set_var_color("pause_play", ofColor(255,140,255));
	gui.set_var_color("pause_pause", ofColor(255,140,255));
	gui.set_var_color("pause_sec1", ofColor(140,255,140));
	gui.set_var_color("pause_sec2", ofColor(140,255,140));
	gui.set_var_color("pause_sec3", ofColor(140,255,140));
	gui.set_var_color("pause_sec4", ofColor(140,255,140));
	gui.set_var_color("pause_sec5", ofColor(140,255,140));
	gui.set_var_color("Test_NextStep", ofColor(140,255,140));
	gui.set_var_color("SEQ_NOTES", ofColor(80,255,80));
	gui.set_var_color("SEQ_OVERLAP", ofColor(80,255,80));
	gui.set_var_color("fade_sec", ofColor(255,255,0));
	gui.set_var_color("des_amount_0", ofColor(255,140,255));
	gui.set_var_color("des_amount_10", ofColor(255,140,255));
	gui.set_var_color("des_amount_20", ofColor(255,140,255));
	gui.set_var_color("des_amount_30", ofColor(255,140,255));
	gui.set_var_color("des_amount_40", ofColor(255,140,255));
	gui.set_var_color("des_amount_50", ofColor(255,140,255));
	gui.set_var_color("des_amount_60", ofColor(255,140,255));
	gui.set_var_color("des_amount_70", ofColor(255,140,255));
	gui.set_var_color("des_amount_80", ofColor(255,140,255));
	gui.set_var_color("des_amount_90", ofColor(255,140,255));
	gui.set_var_color("des_amt_divide", ofColor(255,140,255));
	gui.set_var_color("des_range_0", ofColor(255,140,255));
	gui.set_var_color("des_range_10", ofColor(255,140,255));
	gui.set_var_color("des_range_20", ofColor(255,140,255));
	gui.set_var_color("des_range_30", ofColor(255,140,255));
	gui.set_var_color("des_range_40", ofColor(255,140,255));
	gui.set_var_color("des_range_50", ofColor(255,140,255));
	gui.set_var_color("des_range_60", ofColor(255,140,255));
	gui.set_var_color("des_range_70", ofColor(255,140,255));
	gui.set_var_color("des_range_80", ofColor(255,140,255));
	gui.set_var_color("des_range_90", ofColor(255,140,255));
	gui.set_var_color("des_range_100", ofColor(255,140,255));
	gui.set_var_color("des_rng_divide", ofColor(255,140,255));
	gui.set_var_color("SaveDebugSounds", ofColor(80,80,255));
	fileName_ = fileName;
	gui_ = &gui;
	gui.loadFromFile(fileName);
	FPS = _FPS_;
	FULL_SCR = _FULL_SCR_;
	scr_x = _scr_x_;
	scr_y = _scr_y_;
	scr_w = _scr_w_;
	scr_h = _scr_h_;
	messages_n = _messages_n_;
	messages_font = _messages_font_;
	messages_x = _messages_x_;
	messages_y = _messages_y_;
	OSC_in_port = _OSC_in_port_;
	in_channels = _in_channels_;
	out_channels = _out_channels_;
	sample_rate = _sample_rate_;
	sound_buffers = _sound_buffers_;
	sound_buffer = _sound_buffer_;
	engine = _engine_;
	selectby = _selectby_;
	device_in = _device_in_;
	device_out = _device_out_;
	devin_nameports = _devin_nameports_;
	devout_nameports = _devout_nameports_;
	EMULATE_IN = _EMULATE_IN_;
	buffer_sec = _buffer_sec_;
	safe_samples = _safe_samples_;
	time_in = _time_in_;
	sparse_incr = _sparse_incr_;
	hidden_neurons = _hidden_neurons_;
}

//--------------------------------------------------------------
void Parameters::save() {
	gui_->saveToFile(fileName_);
}

//--------------------------------------------------------------

